% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Group4.R
\name{Group4}
\alias{Group4}
\alias{prepare_forestfires_data}
\alias{prepare_data}
\alias{estimate_beta}
\alias{bootstrap_ci}
\alias{predict_class}
\alias{confusion_matrix}
\title{Group4}
\usage{
prepare_forestfires_data(file_path)

prepare_data(data, response)

estimate_beta(data, response)

bootstrap_ci(data, response, beta_estimate, n_bootstrap = 20, alpha = 0.05)

predict_class(beta, X)

confusion_matrix(data, response, beta)
}
\arguments{
\item{data}{A data frame containing the predictors and response variable.}

\item{response}{A string specifying the name of the response variable in the data frame.}

\item{n_bootstrap}{The number of bootstrap samples to use in `bootstrap_ci`. Default is 20.}

\item{alpha}{The significance level for the confidence intervals in `bootstrap_ci`. Default is 0.05.}

\item{beta}{A numeric vector of estimated coefficients from the logistic regression model (used in `predict_class` and `confusion_matrix`).}

\item{X}{The design matrix of predictors (used in `predict_class`).}

\item{beta_hat}{A numeric vector of estimated coefficients from the logistic regression model (used in `bootstrap_ci`).}
}
\value{
The return value varies depending on the function:

- **`prepare_forestfires_data`**: A data frame with the preprocessed forestfires data, including the `binary_area` variable.
- **`prepare_data`**: A list containing the design matrix `X` and the response vector `y`.
- **`estimate_beta`**: A list containing the estimated coefficients `beta`, the value of the log-likelihood function, and the convergence status of the optimization.
- **`bootstrap_ci`**: A matrix of confidence intervals for each coefficient.
- **`predict_class`**: A vector of predicted classes (0 or 1).
- **`confusion_matrix`**: A list containing the confusion matrix and various performance metrics such as prevalence, accuracy, sensitivity, false discovery rate, and diagnostic odds ratio.
}
\description{
A set of functions to perform logistic regression, including data preparation, parameter estimation, bootstrapping confidence intervals, class prediction, and performance metrics.
}
\details{
**Functions Included:**

- **`prepare_forestfires_data`**: Preprocesses the forestfires dataset by creating a binary response variable (`binary_area`).
- **`prepare_data`**: Handles numeric, factor, and date variables to create a design matrix and response vector.
- **`estimate_beta`**: Estimates the coefficients of a logistic regression model using numerical optimization.
- **`bootstrap_ci`**: Computes bootstrap confidence intervals for the logistic regression coefficients.
- **`predict_class`**: Predicts classes based on the estimated coefficients and a cutoff of 0.5.
- **`confusion_matrix`**: Computes the confusion matrix and various performance metrics for the logistic regression model.
}
\examples{
# Load necessary library
library(stats)

# Prepare the forestfires dataset
file_path <- "forestfires.csv"  # Update this to the correct file path
forestfires_data <- prepare_forestfires_data(file_path)

# Estimate beta coefficients
result <- estimate_beta(forestfires_data, "binary_area")
cat("Estimated Beta Coefficients:\n")
print(result$beta)

# Compute bootstrap confidence intervals
ci <- bootstrap_ci(forestfires_data, "binary_area", result$beta, n_bootstrap = 100, alpha = 0.05)
cat("\nBootstrap Confidence Intervals:\n")
print(ci)

# Prepare data for prediction
data_list <- prepare_data(forestfires_data, "binary_area")
X <- data_list$X
y <- data_list$y

# Predict classes
predictions <- predict_class(result$beta, X)

# Generate confusion matrix and metrics
metrics <- confusion_matrix(forestfires_data, "binary_area", result$beta)
cat("\nConfusion Matrix:\n")
print(metrics$confusion_matrix)
cat("\nMetrics:\n")
cat("Prevalence:", metrics$prevalence, "\n")
cat("Accuracy:", metrics$accuracy, "\n")
cat("Sensitivity:", metrics$sensitivity, "\n")
cat("Specificity:", metrics$specificity, "\n")
cat("False Discovery Rate:", metrics$false_discovery_rate, "\n")
cat("Diagnostic Odds Ratio:", metrics$diagnostic_odds_ratio, "\n")

}
